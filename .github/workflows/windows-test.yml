name: Test Windows

on:
  repository_dispatch:
    types: [windows-test-command]

jobs:
  docker:
    runs-on: [self-hosted, Windows, X64]
    strategy:
      fail-fast: false
    steps:
      - name: Create pending status
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            async ({ github, context }) => {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.client_payload.pull_request.head.sha,
                state: 'pending',
                target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
                context: 'Test Windows',
              });
            }

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 24.x

      - name: Install dependencies
        run: npm ci --omit=optional

      - name: Run tests
        run: npm run test:ci

      - name: Create success status
        uses: actions/github-script@v7.0.1
        if: success()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            async ({ github, context }) => {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.client_payload.pull_request.head.sha,
                state: 'success',
                target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
                context: 'Test Windows',
              });
            }

      - name: Create failure status
        uses: actions/github-script@v7.0.1
        if: failure()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            async ({ github, context }) => {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.client_payload.pull_request.head.sha,
                state: 'failure',
                target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
                context: 'Test Windows',
              });
            }