name: Test

on:
  pull_request:
    branches: [ main ]

jobs:
  docker:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: cristianrgreco
          password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Run tests
        run: npm run test:ci

  docker-rootless:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Setup rootless Docker
        uses: ScribeMD/rootless-docker@0.2.2
      - name: Remove Docket root socket
        run: sudo rm -rf /var/run/docker.sock
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: cristianrgreco
          password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Run tests
        run: npm run test:ci
        env:
          CI_ROOTLESS: true

  podman:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: cristianrgreco
          password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
      - name: Setup Podman
        run: |
          sudo apt-get remove -y podman
          curl -L "https://github.com/containers/podman/releases/download/v4.4.2/podman-remote-static-linux_amd64.tar.gz" -o podman-remote-static-linux_amd64.tar.gz 
          tar -xzf podman-remote-static-linux_amd64.tar.gz
          ln -s podman-remote-static-linux_amd64 /usr/local/bin/podman
          podman -v
          podman info
      - name: Set environment
        run: echo "DOCKER_HOST=unix:///run/user/$(id -u)/podman/podman.sock" >> $GITHUB_ENV
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Run tests
        run: npm run test:ci
        env:
          CI_ROOTLESS: true
          TESTCONTAINERS_RYUK_DISABLED: true

  colima:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ macos-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Setup Colima
        uses: douglascamata/setup-docker-macos-action@v1-alpha
      - name: Set environment
        run: echo "DOCKER_HOST=unix://$HOME/.colima/docker.sock" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: cristianrgreco
          password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Run tests
        run: npm run test:ci
        env:
          CI_ROOTLESS: true
          TESTCONTAINERS_RYUK_DISABLED: true

  smoke-test:
    runs-on: ${{ matrix.os-version }}
    strategy:
      matrix:
        os-version: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Remove dev dependencies
        run: npm prune --omit=dev
      - name: Run CommonJS module smoke test
        run: node smoke-test.js
      - name: Run ES module smoke test
        run: node smoke-test.mjs