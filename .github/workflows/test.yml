name: Test

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ubuntu-latest]
        node-version: [14.x, 16.x, 18.x]
    steps:
    - name: Code checkout
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: cristianrgreco
        password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
    - name: Install NodeJS ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci --omit=optional
    - name: Run tests
      run: npm run test:ci

  rootless:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { XDG_RUNTIME_DIR: "" }
          - { XDG_RUNTIME_DIR: "/tmp/docker-testcontainers/" }
    steps:
    - name: Code checkout
      uses: actions/checkout@v3
    - name: Uninstall root Docker
      run: sudo apt-get -q -y --purge remove moby-engine moby-buildx && sudo rm -rf /var/run/docker.sock
    - name: Install rootless Docker
      env:
        XDG_RUNTIME_DIR: ${{ matrix.XDG_RUNTIME_DIR }}
      run: |
        mkdir -p $XDG_RUNTIME_DIR || true
        curl -fsSL https://get.docker.com/rootless | sh > init.sh
        cat init.sh
        source <(grep '^export' init.sh)
        PATH=$HOME/bin:$PATH dockerd-rootless.sh --experimental --storage-driver vfs &
        sleep 1
        DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock docker info || ls -la $XDG_RUNTIME_DIR
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: cristianrgreco
        password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
    - name: Install NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install dependencies
      run: npm ci --omit=optional
    - name: Run tests
      run: npm run test:ci

  smoke-test:
    runs-on: ${{ matrix.os-version }}
    strategy:
      matrix:
        os-version: [ubuntu-latest]
        node-version: [14.x, 16.x, 18.x]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Remove dev dependencies
        run: npm prune --omit=dev
      - name: Run CommonJS module smoke test
        run: node smoke-test.js
      - name: Run ES module smoke test
        run: node smoke-test.mjs