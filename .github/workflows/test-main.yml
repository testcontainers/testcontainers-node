name: Test

on:
  push:
    branches: [ main ]

jobs:
  docker:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch main branch
        run: git fetch origin main
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: cristianrgreco
          password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Run tests
        run: npm run test:ci
      - name: SonarCloud scan
        if: ${{ matrix.node-version == '18.x' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-rootless:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Setup rootless Docker
        uses: ScribeMD/rootless-docker@0.2.2
      - name: Remove Docket root socket
        run: sudo rm -rf /var/run/docker.sock
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: cristianrgreco
          password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Run tests
        run: npm run test:ci
        env:
          CI_ROOTLESS: true

  podman:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub  # Move to after Podman installed once https://github.com/containers/podman/discussions/16842 resolved
        uses: docker/login-action@v2
        with:
          username: cristianrgreco
          password: b62e3c19-4990-46f6-b221-55cf0bfb6513 # read-only
      - name: Setup Podman
        run: |
          curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/Debian_Testing/Release.key \
            | gpg --dearmor \
            | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg]\
              https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/Debian_Testing/ /" \
            | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
          sudo apt-get update
          sudo apt-get -y install podman
          systemctl enable --now --user podman podman.socket
          podman info
      - name: Set environment
        run: echo "DOCKER_HOST=unix://${XDG_RUNTIME_DIR}/podman/podman.sock" >> $GITHUB_ENV
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Run tests
        run: npm run test:ci -- generic-container
        env:
          CI_ROOTLESS: true
          CI_PODMAN: true

  smoke-test:
    runs-on: ${{ matrix.os-version }}
    strategy:
      matrix:
        os-version: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x, 18.x ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --omit=optional
      - name: Remove dev dependencies
        run: npm prune --omit=dev
      - name: Run CommonJS module smoke test
        run: node smoke-test.js
      - name: Run ES module smoke test
        run: node smoke-test.mjs