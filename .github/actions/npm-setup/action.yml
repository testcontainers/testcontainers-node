name: "NPM Setup"
description: "Sets up JS runtime and installs NPM dependencies with caching"

inputs:
  runner:
    description: "Runner to use"
    required: true
  js-runtime:
    description: "JS runtime to use"
    required: true
  js-runtime-version:
    description: "JS runtime version to use"
    required: true
  workspace:
    description: "Key for the cache"
    required: true

outputs:
  workspace_path:
    description: "Full path to the workspace directory"
    value: ${{ steps.set-env.outputs.workspace_path }}
  run_cmd:
    description: "Command prefix (e.g. 'node' or 'bun')"
    value: ${{ steps.set-env.outputs.run_cmd }}
  run_script_cmd:
    description: "Command prefix to run package scripts (e.g. 'npm run' or 'bun run')"
    value: ${{ steps.set-env.outputs.run_script_cmd }}

runs:
  using: "composite"
  steps:
    - name: Install NodeJS ${{ inputs.js-runtime-version }}
      if: ${{ inputs.js-runtime == 'node' }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.js-runtime-version }}

    - name: Install Bun ${{ inputs.js-runtime-version }}
      if: ${{ inputs.js-runtime == 'bun' }}
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ inputs.js-runtime-version }}

    - name: Set cache configuration
      shell: bash
      id: set-env
      run: |
        if [ "${{ inputs.workspace }}" = "testcontainers" ]; then
          echo "CACHE_PATHS<<EOF" >> $GITHUB_ENV
          echo "node_modules" >> $GITHUB_ENV
          echo "packages/testcontainers/node_modules" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "WORKSPACE_PATH=packages/testcontainers" >> $GITHUB_ENV
          echo "workspace_path=packages/testcontainers" >> "$GITHUB_OUTPUT"
        else
          echo "CACHE_PATHS<<EOF" >> $GITHUB_ENV
          echo "node_modules" >> $GITHUB_ENV
          echo "packages/testcontainers/node_modules" >> $GITHUB_ENV
          echo "packages/modules/${{ inputs.workspace }}/node_modules" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "WORKSPACE_PATH=packages/modules/${{ inputs.workspace }}" >> $GITHUB_ENV
          echo "workspace_path=packages/modules/${{ inputs.workspace }}" >> "$GITHUB_OUTPUT"
        fi

        if [ "${{ inputs.js-runtime }}" = "node" ]; then
          echo "run_cmd=node" >> "$GITHUB_OUTPUT"
          echo "run_script_cmd=npm run" >> "$GITHUB_OUTPUT"
        elif [ "${{ inputs.js-runtime }}" = "bun" ]; then
          echo "run_cmd=bun" >> "$GITHUB_OUTPUT"
          echo "run_script_cmd=bun run" >> "$GITHUB_OUTPUT"
        fi

    - uses: actions/cache/restore@v4
      id: npm-cache
      with:
        path: ${{ env.CACHE_PATHS }}
        key: ${{ inputs.runner }}-runtime-${{ inputs.js-runtime-version }}-${{ inputs.workspace }}-${{ hashFiles('package-lock.json') }}

    - name: Install dependencies
      if: steps.npm-cache.outputs.cache-hit != 'true'
      shell: bash
      run: npm ci --workspace ${{ env.WORKSPACE_PATH }} --include-workspace-root

    - name: Cache npm
      if: steps.npm-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ env.CACHE_PATHS }}
        key: ${{ steps.npm-cache.outputs.cache-primary-key }}
